{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhive\\\\OneDrive\\\\Documents\\\\simba\\\\ekin\\\\text-pattern-generator\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Settings from './Settings';\nimport Canvas from './Canvas';\nimport ErrorModal from './ErrorModal';\nimport generatePattern from '../utils/generatePattern';\nimport transliterateText from '../utils/transliterateText';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userText, setUserText] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\n  const [selectedShape, setSelectedShape] = useState('rectangle');\n  const [shapeWidth, setShapeWidth] = useState(500);\n  const [shapeHeight, setShapeHeight] = useState(500);\n  const [selectedColorScheme, setSelectedColorScheme] = useState('scheme1');\n  const [generatedImage, setGeneratedImage] = useState('');\n  const [config, setConfig] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetch('/config.json').then(response => response.json()).then(data => setConfig(data)).catch(err => setError('Failed to load configuration'));\n  }, []);\n  const handleGenerate = () => {\n    if (!config) return;\n    try {\n      const transliteratedText = transliterateText(userText, selectedLanguage);\n      const patternDataUrl = generatePattern({\n        text: transliteratedText,\n        shape: selectedShape,\n        width: shapeWidth,\n        height: shapeHeight,\n        colorScheme: selectedColorScheme,\n        config\n      });\n      setGeneratedImage(patternDataUrl);\n    } catch (err) {\n      setError('Pattern generation failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(Settings, {\n        userText: userText,\n        setUserText: setUserText,\n        selectedLanguage: selectedLanguage,\n        setSelectedLanguage: setSelectedLanguage,\n        selectedShape: selectedShape,\n        setSelectedShape: setSelectedShape,\n        shapeWidth: shapeWidth,\n        setShapeWidth: setShapeWidth,\n        shapeHeight: shapeHeight,\n        setShapeHeight: setShapeHeight,\n        selectedColorScheme: selectedColorScheme,\n        setSelectedColorScheme: setSelectedColorScheme,\n        config: config\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerate,\n        children: \"Generate Pattern\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n        message: error,\n        onClose: () => setError('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: generatedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: generatedImage,\n          alt: \"Generated Pattern\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: generatedImage,\n          download: \"pattern.jpg\",\n          children: \"Download Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"BCIspjWyBUe5EeeNK6WE1oD2ypc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Settings","Canvas","ErrorModal","generatePattern","transliterateText","jsxDEV","_jsxDEV","App","_s","userText","setUserText","selectedLanguage","setSelectedLanguage","selectedShape","setSelectedShape","shapeWidth","setShapeWidth","shapeHeight","setShapeHeight","selectedColorScheme","setSelectedColorScheme","generatedImage","setGeneratedImage","config","setConfig","error","setError","fetch","then","response","json","data","catch","err","handleGenerate","transliteratedText","patternDataUrl","text","shape","width","height","colorScheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","message","onClose","src","alt","href","download","_c","$RefreshReg$"],"sources":["C:/Users/Bhive/OneDrive/Documents/simba/ekin/text-pattern-generator/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Settings from './Settings';\nimport Canvas from './Canvas';\nimport ErrorModal from './ErrorModal';\nimport generatePattern from '../utils/generatePattern';\nimport transliterateText from '../utils/transliterateText';\nimport '../App.css';\n\nconst App = () => {\n    const [userText, setUserText] = useState('');\n    const [selectedLanguage, setSelectedLanguage] = useState('en');\n    const [selectedShape, setSelectedShape] = useState('rectangle');\n    const [shapeWidth, setShapeWidth] = useState(500);\n    const [shapeHeight, setShapeHeight] = useState(500);\n    const [selectedColorScheme, setSelectedColorScheme] = useState('scheme1');\n    const [generatedImage, setGeneratedImage] = useState('');\n    const [config, setConfig] = useState(null);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        fetch('/config.json')\n            .then(response => response.json())\n            .then(data => setConfig(data))\n            .catch(err => setError('Failed to load configuration'));\n    }, []);\n\n    const handleGenerate = () => {\n        if (!config) return;\n\n        try {\n            const transliteratedText = transliterateText(userText, selectedLanguage);\n            const patternDataUrl = generatePattern({\n                text: transliteratedText,\n                shape: selectedShape,\n                width: shapeWidth,\n                height: shapeHeight,\n                colorScheme: selectedColorScheme,\n                config\n            });\n            setGeneratedImage(patternDataUrl);\n        } catch (err) {\n            setError('Pattern generation failed');\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"settings\">\n                <Settings\n                    userText={userText}\n                    setUserText={setUserText}\n                    selectedLanguage={selectedLanguage}\n                    setSelectedLanguage={setSelectedLanguage}\n                    selectedShape={selectedShape}\n                    setSelectedShape={setSelectedShape}\n                    shapeWidth={shapeWidth}\n                    setShapeWidth={setShapeWidth}\n                    shapeHeight={shapeHeight}\n                    setShapeHeight={setShapeHeight}\n                    selectedColorScheme={selectedColorScheme}\n                    setSelectedColorScheme={setSelectedColorScheme}\n                    config={config}\n                />\n                <button onClick={handleGenerate}>Generate Pattern</button>\n                {error && <ErrorModal message={error} onClose={() => setError('')} />}\n            </div>\n            <div className=\"output\">\n                {generatedImage && (\n                    <div>\n                        <img src={generatedImage} alt=\"Generated Pattern\" />\n                        <a href={generatedImage} download=\"pattern.jpg\">Download Image</a>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}