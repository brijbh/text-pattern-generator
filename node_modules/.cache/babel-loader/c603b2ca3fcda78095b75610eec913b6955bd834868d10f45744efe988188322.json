{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhive\\\\OneDrive\\\\Documents\\\\simba\\\\ekin\\\\patternmaker\\\\v7\\\\text-pattern-generator\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Settings from './Settings';\nimport Canvas from './Canvas';\nimport ErrorModal from './ErrorModal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [config, setConfig] = useState(null); // Initialize config as null\n  const [pattern, setPattern] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios.get('/config.json').then(response => setConfig(response.data)).catch(error => setError(error.message));\n  }, []);\n  const generatePattern = settings => {\n    try {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = config.outputDimensions.width;\n      canvas.height = config.outputDimensions.height;\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = '#ffffff';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Generate text pattern\n      for (let i = 0; i < config.numberOfTexts; i++) {\n        const fontSize = Math.random() * (config.fontSizeRange[1] - config.fontSizeRange[0]) + config.fontSizeRange[0];\n        const fontFamily = config.fontFamilies[Math.floor(Math.random() * config.fontFamilies.length)];\n        const fontWeight = config.fontWeights[Math.floor(Math.random() * config.fontWeights.length)];\n        const rotation = config.rotations[Math.floor(Math.random() * config.rotations.length)];\n        const x = Math.random() * canvas.width;\n        const y = Math.random() * canvas.height;\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(rotation * Math.PI / 180);\n        ctx.font = `${fontWeight} ${fontSize}px ${fontFamily}`;\n        ctx.fillStyle = settings.colorScheme[Math.floor(Math.random() * settings.colorScheme.length)];\n        ctx.fillText(settings.text, 0, 0);\n        ctx.restore();\n      }\n      const dataURL = canvas.toDataURL('image/jpeg');\n      setPattern(dataURL);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  if (config === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text Pattern Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generate beautiful text patterns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-container\",\n        children: /*#__PURE__*/_jsxDEV(Settings, {\n          config: config,\n          generatePattern: generatePattern\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-container\",\n        children: pattern && /*#__PURE__*/_jsxDEV(Canvas, {\n          pattern: pattern\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gshpNpxgwycNxiKy8oEqQ888aL4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Settings","Canvas","ErrorModal","jsxDEV","_jsxDEV","App","_s","config","setConfig","pattern","setPattern","error","setError","get","then","response","data","catch","message","generatePattern","settings","canvas","document","createElement","ctx","getContext","width","outputDimensions","height","clearRect","fillStyle","fillRect","i","numberOfTexts","fontSize","Math","random","fontSizeRange","fontFamily","fontFamilies","floor","length","fontWeight","fontWeights","rotation","rotations","x","y","save","translate","rotate","PI","font","colorScheme","fillText","text","restore","dataURL","toDataURL","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Bhive/OneDrive/Documents/simba/ekin/patternmaker/v7/text-pattern-generator/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Settings from './Settings';\nimport Canvas from './Canvas';\nimport ErrorModal from './ErrorModal';\nimport './App.css';\n\nconst App = () => {\n  const [config, setConfig] = useState(null);  // Initialize config as null\n  const [pattern, setPattern] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    axios.get('/config.json')\n      .then(response => setConfig(response.data))\n      .catch(error => setError(error.message));\n  }, []);\n\n  const generatePattern = (settings) => {\n    try {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = config.outputDimensions.width;\n      canvas.height = config.outputDimensions.height;\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = '#ffffff';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Generate text pattern\n      for (let i = 0; i < config.numberOfTexts; i++) {\n        const fontSize = Math.random() * (config.fontSizeRange[1] - config.fontSizeRange[0]) + config.fontSizeRange[0];\n        const fontFamily = config.fontFamilies[Math.floor(Math.random() * config.fontFamilies.length)];\n        const fontWeight = config.fontWeights[Math.floor(Math.random() * config.fontWeights.length)];\n        const rotation = config.rotations[Math.floor(Math.random() * config.rotations.length)];\n        const x = Math.random() * canvas.width;\n        const y = Math.random() * canvas.height;\n\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(rotation * Math.PI / 180);\n        ctx.font = `${fontWeight} ${fontSize}px ${fontFamily}`;\n        ctx.fillStyle = settings.colorScheme[Math.floor(Math.random() * settings.colorScheme.length)];\n        ctx.fillText(settings.text, 0, 0);\n        ctx.restore();\n      }\n\n      const dataURL = canvas.toDataURL('image/jpeg');\n      setPattern(dataURL);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  if (config === null) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"header\">\n        <h1>Text Pattern Generator</h1>\n        <p>Generate beautiful text patterns</p>\n      </div>\n      <div className=\"content\">\n        <div className=\"settings-container\">\n          <Settings config={config} generatePattern={generatePattern} />\n        </div>\n        <div className=\"canvas-container\">\n          {pattern && <Canvas pattern={pattern} />}\n        </div>\n      </div>\n      {error && <ErrorModal message={error} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}