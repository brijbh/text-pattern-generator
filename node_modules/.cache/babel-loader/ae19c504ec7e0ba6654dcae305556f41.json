{"ast":null,"code":"import { generateRandomColorScheme } from './colorUtils';\nimport { fillTextPatterns } from './textUtils';\nconst generatePattern = ({\n  text,\n  shape,\n  width,\n  height,\n  colorScheme,\n  config\n}) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  canvas.width = config.outputDimensions.width;\n  canvas.height = config.outputDimensions.height;\n  const selectedColors = colorScheme === 'random' ? generateRandomColorScheme() : config.colorSchemes[colorScheme];\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = '#FFFFFF';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.save();\n  ctx.strokeStyle = '#000000';\n  ctx.lineWidth = 2;\n  ctx.beginPath();\n  if (shape === 'rectangle' || shape === 'square') {\n    ctx.rect((canvas.width - width) / 2, (canvas.height - height) / 2, width, height);\n  } else if (shape === 'circle') {\n    ctx.arc(canvas.width / 2, canvas.height / 2, Math.min(width, height) / 2, 0, 2 * Math.PI);\n  } else if (shape === 'ellipse') {\n    ctx.ellipse(canvas.width / 2, canvas.height / 2, width / 2, height / 2, 0, 0, 2 * Math.PI);\n  } else if (shape === 'triangle') {\n    const startX = (canvas.width - width) / 2;\n    const startY = (canvas.height + height) / 2;\n    ctx.moveTo(startX, startY);\n    ctx.lineTo(startX + width, startY);\n    ctx.lineTo(startX + width / 2, startY - height);\n    ctx.closePath();\n  }\n  ctx.fill();\n  ctx.stroke();\n  ctx.clip();\n  fillTextPatterns(ctx, text, selectedColors, canvas);\n  ctx.restore();\n  return canvas.toDataURL('image/jpeg');\n};\nexport default generatePattern;","map":{"version":3,"names":["generateRandomColorScheme","fillTextPatterns","generatePattern","text","shape","width","height","colorScheme","config","canvas","document","createElement","ctx","getContext","outputDimensions","selectedColors","colorSchemes","clearRect","fillStyle","fillRect","save","strokeStyle","lineWidth","beginPath","rect","arc","Math","min","PI","ellipse","startX","startY","moveTo","lineTo","closePath","fill","stroke","clip","restore","toDataURL"],"sources":["C:/Users/Bhive/OneDrive/Documents/simba/ekin/text-pattern-generator/src/utils/generatePattern.js"],"sourcesContent":["import { generateRandomColorScheme } from './colorUtils';\r\nimport { fillTextPatterns } from './textUtils';\r\n\r\nconst generatePattern = ({ text, shape, width, height, colorScheme, config }) => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    canvas.width = config.outputDimensions.width;\r\n    canvas.height = config.outputDimensions.height;\r\n\r\n    const selectedColors = colorScheme === 'random' ? generateRandomColorScheme() : config.colorSchemes[colorScheme];\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.fillStyle = '#FFFFFF';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    ctx.save();\r\n    ctx.strokeStyle = '#000000';\r\n    ctx.lineWidth = 2;\r\n\r\n    ctx.beginPath();\r\n    if (shape === 'rectangle' || shape === 'square') {\r\n        ctx.rect((canvas.width - width) / 2, (canvas.height - height) / 2, width, height);\r\n    } else if (shape === 'circle') {\r\n        ctx.arc(canvas.width / 2, canvas.height / 2, Math.min(width, height) / 2, 0, 2 * Math.PI);\r\n    } else if (shape === 'ellipse') {\r\n        ctx.ellipse(canvas.width / 2, canvas.height / 2, width / 2, height / 2, 0, 0, 2 * Math.PI);\r\n    } else if (shape === 'triangle') {\r\n        const startX = (canvas.width - width) / 2;\r\n        const startY = (canvas.height + height) / 2;\r\n        ctx.moveTo(startX, startY);\r\n        ctx.lineTo(startX + width, startY);\r\n        ctx.lineTo(startX + width / 2, startY - height);\r\n        ctx.closePath();\r\n    }\r\n    ctx.fill();\r\n    ctx.stroke();\r\n    ctx.clip();\r\n\r\n    fillTextPatterns(ctx, text, selectedColors, canvas);\r\n\r\n    ctx.restore();\r\n    return canvas.toDataURL('image/jpeg');\r\n};\r\n\r\nexport default generatePattern;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}